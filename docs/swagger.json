{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "This is a simple API for managing songs.",
        "title": "Online Song Library API",
        "contact": {
            "name": "Vadim Barashkov"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/license/mit"
        },
        "version": "1.0"
    },
    "paths": {
        "/api/v1/ping": {
            "get": {
                "description": "Responds with \"pong\" to verify the server is running.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "healthcheck"
                ],
                "summary": "Server healthcehck",
                "responses": {
                    "200": {
                        "description": "Server is running"
                    }
                }
            }
        },
        "/api/v1/songs": {
            "get": {
                "description": "Retrieves a list of songs from the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Fetch multiple songs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Limit the number of items",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by group name",
                        "name": "groupName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by song name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by release year",
                        "name": "releaseYear",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by exact release date (dd.MM.yyyy)",
                        "name": "releaseDate",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter songs released after the specified date (dd.MM.yyyy)",
                        "name": "releaseDateAfter",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter songs released before the specified date (dd.MM.yyyy)",
                        "name": "releaseDateBefore",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by song text",
                        "name": "text",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.songsResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new song to the library",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Add a new song",
                "parameters": [
                    {
                        "description": "Add Song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.addSongRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/http.songSchema"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/songs/{songID}": {
            "delete": {
                "description": "Deletes a song using the song ID",
                "tags": [
                    "songs"
                ],
                "summary": "Remove a song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Song deleted successfully"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Updates a song's information using the song ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Modify a song",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Song",
                        "name": "song",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateSongRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.songSchema"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/songs/{songID}/text": {
            "get": {
                "description": "Retrieves a song along with its verses using the song ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "songs"
                ],
                "summary": "Fetch a song with verses",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Song ID",
                        "name": "songID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of verses",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.songWithVersesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "http.addSongRequest": {
            "description": "Defines the expected structure for requests to add a new song.",
            "type": "object",
            "required": [
                "group",
                "song"
            ],
            "properties": {
                "group": {
                    "type": "string",
                    "example": "The Rolling Stones"
                },
                "song": {
                    "type": "string",
                    "example": "Paint It Black"
                }
            }
        },
        "http.errorResponse": {
            "description": "Represents the structure of error responses from the API.",
            "type": "object",
            "properties": {
                "details": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Group name is required",
                        "Song name is required"
                    ]
                },
                "message": {
                    "type": "string",
                    "example": "invalid request body"
                },
                "status": {
                    "type": "string",
                    "example": "error"
                }
            }
        },
        "http.paginationSchema": {
            "description": "Represents pagination metadata for API responses.",
            "type": "object",
            "properties": {
                "items": {
                    "type": "integer",
                    "example": 2
                },
                "limit": {
                    "type": "integer",
                    "example": 10
                },
                "offset": {
                    "type": "integer",
                    "example": 0
                },
                "total": {
                    "type": "integer",
                    "example": 100
                }
            }
        },
        "http.songDetailSchema": {
            "description": "Represents detailed information about a song.",
            "type": "object",
            "properties": {
                "link": {
                    "type": "string",
                    "example": "https://example.com/heyjude"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "02.01.1968"
                },
                "text": {
                    "type": "string",
                    "example": "Hey Jude, don't make it bad..."
                }
            }
        },
        "http.songSchema": {
            "description": "Represents the structure of a song entity for API responses.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-10-05T14:48:00Z"
                },
                "groupName": {
                    "type": "string",
                    "example": "The Beatles"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                },
                "name": {
                    "type": "string",
                    "example": "Hey Jude"
                },
                "songDetail": {
                    "$ref": "#/definitions/http.songDetailSchema"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-10-06T09:12:00Z"
                }
            }
        },
        "http.songWithVersesResponse": {
            "description": "Represents the structure of the response for fetching a song with its verses.",
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/http.paginationSchema"
                },
                "song": {
                    "$ref": "#/definitions/http.songWithVersesSchema"
                }
            }
        },
        "http.songWithVersesSchema": {
            "description": "Represents a song and its verses for API responses.",
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2024-10-05T14:48:00Z"
                },
                "groupName": {
                    "type": "string",
                    "example": "Queen"
                },
                "id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                },
                "name": {
                    "type": "string",
                    "example": "Bohemian Rhapsody"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2024-10-06T09:12:00Z"
                },
                "verses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "Is this the real life?",
                        "Is this just fantasy?"
                    ]
                }
            }
        },
        "http.songsResponse": {
            "description": "Represents the structure of the response for fetching multiple songs.",
            "type": "object",
            "properties": {
                "pagination": {
                    "$ref": "#/definitions/http.paginationSchema"
                },
                "songs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.songSchema"
                    }
                }
            }
        },
        "http.updateSongRequest": {
            "description": "Defines the expected structure for requests to update an existing song.",
            "type": "object",
            "properties": {
                "groupName": {
                    "type": "string",
                    "example": "Led Zeppelin"
                },
                "link": {
                    "type": "string",
                    "example": "https://example.com/stairway"
                },
                "name": {
                    "type": "string",
                    "example": "Stairway to Heaven"
                },
                "releaseDate": {
                    "type": "string",
                    "example": "08.11.1971"
                },
                "text": {
                    "type": "string",
                    "example": "There's a lady who's sure..."
                }
            }
        }
    }
}